on:
  issues:
    types:
      - labeled

jobs:
  create_branch_for_ticket:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v5
        id: "identify_branches"
        if: ${{ ( github.event.label.name == 'in progress' || github.event.label.name == 'hotfix' ) && !github.event.issue.pull_request }}
        with:
          script: |
            const matchingFeatureBranchesPromise = github.rest.git.listMatchingRefs({
              owner: context.repo.owner, 
              repo: context.repo.repo,
              ref: "heads/feature/${{ github.event.issue.number }}/",
            });
            
            const matchingHotfixBranchesPromise = github.rest.git.listMatchingRefs({
              owner: context.repo.owner, 
              repo: context.repo.repo,
              ref: "heads/hotfix/${{ github.event.issue.number }}/",
            });
            
            const branchExists = Promise.all([
              matchingFeatureBranchesPromise,
              matchingHotfixBranchesPromise
            ]).then((featureResp, hotfixResp) => {
              console.log(`featureResp = ${JSON.stringify(featureResp)}`)
              console.log(`hotfixResp = ${JSON.stringify(hotfixResp)}`)
              
              return (featureResp || hotfixResp 
                        ? "Branch exists"
                        : false
                      )
            })
            
            
      - uses: actions/github-script@v5
        id: create_branch
        if: ${{ !steps.identify_branches.outputs.result }}
        with:
          result-encoding: string
          script: |
            const baseRef = "${{ github.event.label.name == 'hotfix' && 'heads/main' || 'heads/develop' }}"
            
            const shaResp = await github.rest.git.getRef({ 
              owner: context.repo.owner, 
              repo: context.repo.repo,
              ref: baseRef,
            })

            console.log(`shaResp = ${JSON.stringify(shaResp)}`)
            const branchPrefix = "${{ github.event.label.name == 'hotfix' && 'hotfix/' || 'feature/' }}"
            const newBranchRef = `refs/heads/${branchPrefix}${{ github.event.issue.number }}/${ "${{ github.event.issue.title }}".toLowerCase().replace(/[\.\~\^\:\t/\\]/g, "").split(/\W+/).join("-")}`
            console.log(`newBranchRef = ${newBranchRef}`)
            const newRefResp = await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: newBranchRef,
              sha: shaResp["data"]["object"]["sha"],
            })
            console.log(`newRefResp = ${JSON.stringify(newRefResp)}`)
            return newRefResp["data"]["ref"]

      - uses: actions/github-script@v5
        if: ${{ steps.create_branch.outputs.result }}
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Branch created: https://github.com/${context.repo.owner}/${context.repo.repo}/tree/${{ steps.create_branch.outputs.result }}`.replace("refs/heads/", "")
            })



